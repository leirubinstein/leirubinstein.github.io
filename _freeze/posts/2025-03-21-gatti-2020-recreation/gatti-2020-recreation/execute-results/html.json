{
  "hash": "a1a20948dee96408991a394d40aaefb2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Casual Inference Study Recreation - Gatti et al, 2020\"\nauthor: \"Takeen Shamloo, Karol Paya, Leilanie Rubinstein\"\ndate: \"2025-03-21\"\ndescription: \"Recreating Results from Gatti et al, 2020\"\ntoc: true\nimage: table4_from_paper.png\ncategories: [R, Statistical Analysis, Causal Inference, Agriculture]\nformat: \n  html:\n    embed-resources: true\n    code-fold: true\n    code-summary: \"Show code\"\neditor_options: \n  chunk_output_type: console\nexecute:\n  warning: false\n  message: false\n  freeze: true\n---\n\n\n\n## Introduction\n\n[**Can Irrigation Infrastructure Mitigate the Effect of Rainfall Shocks on Conflict?**](https://onlinelibrary.wiley.com/doi/full/10.1002/ajae.12092) uses data from Indonesia to provide evidence of an agricultural link between rainfall and conflict. Low rainfall during the agricultural season decreases production and increases civil conflict, specifically for conflicts about natural resources and popular justice. The researchers then show that the rainfall-conflict link is attenuated by the presence of irrigation infrastructure in a district. \n\nThe authors measured the total number of conflict incidents and the hyperbolic sine transformation of rice production in a given district-year as the outcome. The treatment variable was the interaction between rainfall and district-level irrigation infrastructure measured in 1997, before the study period. \n\nThey used a fixed-effects regression model to estimate the interaction between a district’s irrigation capacity and growing season rainfall in the current year, and used baseline irrigation capacity infrastructure in 1997 as an instrumental variable. The researchers chose this method because random assignment of infrastructure wasn’t feasible and using predetermined irrigation capacity helped ensure that the observed effects were driven by weather conditions rather than other factors. \n\n## Recreation\n\nIn this blog post we will be doing some exploration through the data `data.dta` associated with the paper.\n\nThe authors focus on two focal outcome variables: rice production & conflict incidents. For each variable they use different casual identification strategies to produce their data. For the focus of our analysis we will be working with conflict incidents, trying to recreate their model for Table 4 in R. They originally used Stata to produce their work so we will be doing our best to mimic the results as closely as possible.\n\nBased on what we could infer from the paper, our `data.dta` file, and the Stata documents, we will be focusing on the following variables.\n\n-   **z_rgrowing_season_cm:** rgrowing_season_cm z-scores\n    -   **rgrowing_season_cm:** Rainfall during the growing season in centimeters\n-   **z_tgrowing_season:** tgrowing_season z-scores\n    -   **tgrowing_season:** Temperature during the growing season\n-   **z_rain_ground_dams_ha:** Interaction between rainfall z-scores and irrigation capacity in 1997\n-   **z_temp_ground_dams_ha:** Interaction between temperature z-scores and irrigation capacity in 1997\n-   **year:** Year\n-   **prov:** Province code\n-   **district_code:** District\n\n##### Variables Representing Conflict Types:\n\n-   **resource:** Number of resource incidents\n-   **pop_justice:** Number of popular justice incidents\n-   **law_enf:** Number of law enforcement incidents\n-   **gov_prog:** Number of government programs incidents\n-   **separatist:** Number of separatist incidents\n-   **identity:** Number of identity group incidents\n\n### Loading Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(tidyr)\nlibrary(viridis)\nlibrary(forcats)\nlibrary(tools)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(here)\nlibrary(haven)\nlibrary(fixest)\nlibrary(interactions)\nlibrary(lfe)\nlibrary(stargazer)\n\n# Load study data\ndata_dta <- read_dta(here::here(\"posts/2025-03-21-gatti-2020-recreation/data\", \"data.dta\"))\n```\n:::\n\n\n\n### Data Exploration\n\nOne thing we noticed about `.dta` files is that in ours we have text underneath each of our column names explaining what the column represents. We can't extract this with just `colnames()` so we used a function to extract all those metadata labels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# All column names + info about what it represents.\ncol_labels <- sapply(data_dta, function(x) attr(x, \"label\"))\n\n# Show a few of our column names + metadata.\nhead(col_labels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$district_code\n[1] \"District\"\n\n$prov\n[1] \"Province code\"\n\n$island_code\n[1] \"Island\"\n\n$island_2\n[1] \"Outer and Inner islands\"\n\n$year\n[1] \"Year\"\n\n$total_area\n[1] \"Rice area in hectares\"\n```\n\n\n:::\n:::\n\n\n\n### Explore Conflict Types\n\nFrom our variables we noticed 6 different conflict types which were resource, pop_justice, law_enf, gov_prog, separatist, identity that we should take a look into.\n\nBelow is a visualizations of all the conflict types and their \\# of reported incidents.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter out data for specific conflict types and find sum of reported incidents.\nsubset_of_conflicts <- data_dta %>%\n    select(c(\n        resource,\n        gov_prog,\n        separatist,\n        identity,\n        pop_justice,\n        law_enf\n    )) %>%\n    pivot_longer(\n        cols = everything(),\n        names_to = \"Conflict_Type\",\n        values_to = \"Count\"\n    ) %>%\n    group_by(Conflict_Type) %>%\n    summarise(Total_Count = sum(Count, na.rm = TRUE)) %>%\n    arrange(desc(Total_Count)) %>%\n    ungroup()\n\n# Clean up variable names.\nsubset_of_conflicts <- subset_of_conflicts %>%\n    mutate(\n        Conflict_Type = case_when(\n            Conflict_Type == \"gov_prog\" ~ \"Government Program\",\n            Conflict_Type == \"identity\" ~ \"Identity Conflict\",\n            Conflict_Type == \"law_enf\" ~ \"Law Enforcement\",\n            Conflict_Type == \"pop_justice\" ~ \"Popular Justice\",\n            Conflict_Type == \"resource\" ~ \"Resource Conflict\",\n            Conflict_Type == \"separatist\" ~ \"Separatist Movement\",\n            TRUE ~ Conflict_Type # Keep unchanged if not listed.\n        ),\n        Conflict_Type = fct_reorder(Conflict_Type, Total_Count)\n    )\n\n# Plot Conflict Types by # of incidents.\nggplot(\n    subset_of_conflicts,\n    aes(x = Conflict_Type, y = Total_Count, fill = Conflict_Type)\n) +\n    geom_bar(stat = \"identity\") +\n    labs(\n        x = \"Conflict Types\",\n        y = \"# of Incidents\",\n        title = \"Distribution of Conflict Types\"\n    ) +\n    scale_fill_viridis(discrete = TRUE, option = \"plasma\") +\n    coord_flip() +\n    theme_minimal() +\n    theme(\n        legend.position = \"none\",\n        axis.title.y = element_blank(),\n        panel.grid.minor = element_blank(),\n    )\n```\n\n::: {.cell-output-display}\n![](gatti-2020-recreation_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nPopular Justice had the highest number of incidents, just under 12,000. Separatist Movement followed with around 8,000, and Law Enforcement had about 6,000. The last three (Resource Conflict, Identity Conflict, and Government Program) together make up roughly the same number of incidents as the Separatist Movement. In the study, the authors found the strongest link between their treatment effect and conflicts over natural resources, followed by popular justice and law enforcement, which makes sense given that they are investigating agricultural production.\n\nMoving on, let's start setting up our models for Table 4.\n\n### Filter Data by Model Variables\n\nFor our data we want to limit it to the variables we previously outlined as we prep for our model.\n\nWe want to filter out for only district, year, province, conflict types, (standardized) temperature, (standardized) irrigation capacity, (standardized) rainfall as they are all necessary for reproducing our desired table.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# List of our conflict type column names.\nconflict_vars <- c(\n    \"resource\",\n    \"pop_justice\",\n    \"law_enf\",\n    \"gov_prog\",\n    \"separatist\",\n    \"identity\"\n)\n\ndata_dta <- data_dta %>%\n    select(c(\n        district_code,\n        prov,\n        year,\n        z_rgrowing_season_cm,\n        z_tgrowing_season,\n        z_rain_ground_dams_ha,\n        z_temp_ground_dams_ha,\n        all_of(conflict_vars)\n    ))\n```\n:::\n\n\n\n### Setting up our Fixed-Effects Regression by Conflict Type\n\nTo recreate our table from our model its important to try and take a look at the Stata code they used to build theirs.\n\nTheir table code looked something like this:\n\n```\nxtreg `var' `rain1' `temp1' `irrigation' \ni.year \nc.year#i.prov \ni.prov#c.year, \nfe vce(cluster district_code)\n    outreg2 using table4, word excel append keep(\nz_rgrowing_season_cm c.z_ground_dams_ha#\nc.z_rgrowing_season_cm) nocons\n```\n\nThis is what their table looked like:\n\n![Impact of Growing-Season Rainfall by Subcategories of Conflict: Table 4](table4_from_paper.png)\n\nFrom their code we can see some aspects on how they set up their table. We can see that they use `var rain1 temp1 irrigation` which \"var\" presumably represents the conflict type, \"rain1\" represents our growing season rainfall, \"temp1\" represents our growing season temp, and lastly \"irrigation\" is our irrigation capacity.\n\nWe can also point out the following that,\n\n-   **i.year:** represents year fixed effects,\n-   **c.year#i.prov:** Year-province interactions to account for province-specific trends over time,\n-   **fe vce(cluster district_code):** District-level fixed effects with clustered standard errors.\n\nThey only want to view the results for the growing season rainfall as well as the interaction it has with the irrigation capacity.\n\nWe also have an excerpt from our paper which states:\n\n\"<mark>Note: All regressions include temperature and temperature interacted with irrigation capacity, as well as district fixed effects, province-specific linear time trends, and year fixed effects. Irrigation is defined as irrigation capacity in 1997, the year before the start of the period of observation. Growing-season rainfall is the sum of rainfall from November in t− 1 to April in year t. The outcomes are the number of conflict incidents by type of conflict. Standard errors, clustered at the district level, are in parentheses, where \\*\\*\\*, \\*\\*, and \\* denote statistical significance at the 1%, 5%, and 10% levels, respectively.</mark>\"\n\nFrom this we can piece together our model based on the variables we've extracted from our set.\n\nOur equation is going to look like this:\n\n$$\\tiny \\begin{align*} conflict\\_type_{i,t} = & \\ \\beta_0 + \\beta_1 z\\_rgrowing\\_season\\_cm_{i,t} + \\beta_2 z\\_rain\\_ground\\_dams\\_ha_{i,t} \\\\ & + \\beta_3 z\\_tgrowing\\_season_{i,t} + \\beta_4 z\\_temp\\_ground\\_dams\\_ha_{i,t} \\\\ & + \\gamma_t + \\delta_t \\cdot prov_i + \\alpha_i + \\varepsilon_{i,t} \\end{align*}$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function for running fixed-effect regressions used in Table 4 for each conflict type.\nrun_regression <- function(var) {\n    feols(\n        as.formula(paste0(\n            var,\n            \" ~ z_rgrowing_season_cm + z_rain_ground_dams_ha +\n                       z_tgrowing_season + z_temp_ground_dams_ha +\n                       factor(year) + year:factor(prov) | district_code\"\n        )),\n        data = data_dta,\n        cluster = ~district_code\n    )\n}\n\n# Run our regression formula for each of our conflict types.\nconflict_models <- lapply(conflict_vars, run_regression)\n```\n:::\n\n\n\n#### Adding significance indicators to our model coefficients\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to extract regression coefficients and add significance stars.\nextract_coefficients <- function(model) {\n    coefs <- coef(model)\n    std_errors <- sqrt(diag(vcov(model)))\n    p_values <- 2 * (1 - pnorm(abs(coefs / std_errors)))\n\n    data.frame(\n        term = names(coefs),\n        value = paste0(\n            round(coefs, 3),\n            case_when(\n                p_values < 0.01 ~ \"***\",\n                p_values < 0.05 ~ \"**\",\n                p_values < 0.1 ~ \"*\",\n                TRUE ~ \"\"\n            ),\n            \" <br>(\",\n            round(std_errors, 3),\n            \")\"\n        )\n    )\n}\n\n# Add significance indicator for all models.\nresults_list <- lapply(conflict_models, extract_coefficients)\n```\n:::\n\n\n\n#### Extracting other relevant model statistics for Table4\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate given statistical function across all conflict models.\nextract_model_stat <- function(statistic, name) {\n    data.frame(\n        term = name,\n        matrix(sapply(conflict_models, function(x) statistic(x)), nrow = 1)\n    ) %>%\n        mutate(across(-term, as.character))\n}\n\n# Extract R_Squared, # of districts, and # of observations.\nr_squared_df <- extract_model_stat(\n    function(x) round(r2(x, type = \"wr2\"), 3),\n    \"R_Squared\"\n)\nnum_districts_df <- extract_model_stat(\n    function(x) length(fixef(x)$district_code),\n    \"Num. Districts\"\n)\nnum_obs_df <- extract_model_stat(nobs, \"Num. Observations\")\n```\n:::\n\n\n\n#### Renaming our columns to display appropriately in our resulting table.\n\nIn the last step we calculated the R_Squared, \\# Obvs, and \\# of Districts per our results for each model by conflict type.\n\nSince our dataframes share a similar structure we need to make sure to clean all of their column names as we get them ready to merge into the final table.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Renaming our conflict variables for our table.\nconflict_labels <- c(\n    \"gov_prog\" = \"Government<br>Program\",\n    \"identity\" = \"Identity\",\n    \"law_enf\" = \"Law<br>Enforcement\",\n    \"pop_justice\" = \"Popular<br>Justice\",\n    \"resource\" = \"Resource\",\n    \"separatist\" = \"Separatist<br>Movement\"\n)\n\n# Function to rename conflict type variables with their appropriate names.\nrename_cols <- function(df) {\n    colnames(df) <- c(\"term\", conflict_labels[conflict_vars])\n    return(df)\n}\n\n# Renaming the columns in these dataframes to match when we merge them later.\nr_squared_df <- rename_cols(r_squared_df)\nnum_districts_df <- rename_cols(num_districts_df)\nnum_obs_df <- rename_cols(num_obs_df)\n```\n:::\n\n\n\n#### Merge conflict model results into a data frame\n\nIn this step we compile our results into a neat table for our conflict types and rename the output terms to the ones specified in Table 4 from the paper.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Rename regression terms for our table.\nterm_labels <- c(\n    \"z_rgrowing_season_cm\" = \"GS Rainfall\",\n    \"z_rain_ground_dams_ha\" = \"GS Rainfall × Irrigation Capacity\"\n)\n\n# Convert results into a single dataframe and clean up output variable labels.\nresults_df <- bind_rows(results_list, .id = \"Conflict_Type\") %>%\n    filter(term %in% names(term_labels)) %>%\n    mutate(term = term_labels[term]) %>% # Clean up term labels.\n    pivot_wider(names_from = \"Conflict_Type\", values_from = \"value\") %>%\n    rename_with(~ conflict_labels[conflict_vars], -term) # Rename col names to match the rest.\n```\n:::\n\n\n\n#### Appending our R_Squared, District Count, and Observation Counts\n\nIn this last step we finally get to merge all of our resulting dataframes into one as they all share the same column names.\n\nHere we finalize our table using the `kableExtras` package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bind r_squared, district counts, and observations to the table.\nfinal_results <- bind_rows(\n    results_df,\n    r_squared_df,\n    num_districts_df,\n    num_obs_df\n)\n\n# Format table using kable.\nfinal_results %>%\n    kable(\n        format = \"html\",\n        caption = \"Table 4: Impact of Growing-Season Rainfall on Conflict Subcategories\",\n        col.names = c(\"Variable\", conflict_labels[conflict_vars]),\n        escape = FALSE\n    ) %>%\n    kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Table 4: Impact of Growing-Season Rainfall on Conflict Subcategories</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> Resource </th>\n   <th style=\"text-align:left;\"> Popular<br>Justice </th>\n   <th style=\"text-align:left;\"> Law<br>Enforcement </th>\n   <th style=\"text-align:left;\"> Government<br>Program </th>\n   <th style=\"text-align:left;\"> Separatist<br>Movement </th>\n   <th style=\"text-align:left;\"> Identity </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> GS Rainfall </td>\n   <td style=\"text-align:left;\"> -0.108*** <br>(0.04) </td>\n   <td style=\"text-align:left;\"> -0.317*** <br>(0.105) </td>\n   <td style=\"text-align:left;\"> -0.292*** <br>(0.07) </td>\n   <td style=\"text-align:left;\"> -0.058** <br>(0.026) </td>\n   <td style=\"text-align:left;\"> 0.342 <br>(0.228) </td>\n   <td style=\"text-align:left;\"> 0.078 <br>(0.048) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GS Rainfall × Irrigation Capacity </td>\n   <td style=\"text-align:left;\"> 0.018*** <br>(0.005) </td>\n   <td style=\"text-align:left;\"> 0.068* <br>(0.035) </td>\n   <td style=\"text-align:left;\"> 0.014 <br>(0.009) </td>\n   <td style=\"text-align:left;\"> -0.004 <br>(0.003) </td>\n   <td style=\"text-align:left;\"> -0.014 <br>(0.029) </td>\n   <td style=\"text-align:left;\"> 0.023** <br>(0.009) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R_Squared </td>\n   <td style=\"text-align:left;\"> 0.217 </td>\n   <td style=\"text-align:left;\"> 0.232 </td>\n   <td style=\"text-align:left;\"> 0.227 </td>\n   <td style=\"text-align:left;\"> 0.269 </td>\n   <td style=\"text-align:left;\"> 0.223 </td>\n   <td style=\"text-align:left;\"> 0.091 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num. Districts </td>\n   <td style=\"text-align:left;\"> 201 </td>\n   <td style=\"text-align:left;\"> 201 </td>\n   <td style=\"text-align:left;\"> 201 </td>\n   <td style=\"text-align:left;\"> 201 </td>\n   <td style=\"text-align:left;\"> 201 </td>\n   <td style=\"text-align:left;\"> 201 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num. Observations </td>\n   <td style=\"text-align:left;\"> 3417 </td>\n   <td style=\"text-align:left;\"> 3417 </td>\n   <td style=\"text-align:left;\"> 3417 </td>\n   <td style=\"text-align:left;\"> 3417 </td>\n   <td style=\"text-align:left;\"> 3417 </td>\n   <td style=\"text-align:left;\"> 3417 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nWe can see that rainfall is generally reducing our conflict types with the exception of separtist and identity conflicts.\n\nBased on our second variable we can see that irrigation capacity makes rainfall more likely to effect the following conflicts: natural resource, popular justice, and law enforcement but mitigates our other three, which follows the results from the paper.\n\nWe can see that rainfall, irrigation, and their interaction explain a meaningful part of the variation in conflict incidents of around 20% with the exception of Identity Conflicts at 9%.\n\n### Checking out the interactions plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create an empty list to hold our model plots.\ninteraction_plots <- list()\n\n# Loop through each model and generate their respective interaction plot.\nfor (i in seq_along(conflict_models)) {\n    conflict_model <- conflict_models[[i]] # Pulling each model by type.\n    conflict_type <- conflict_vars[i] # Conflict variable name.\n\n    # Generate predicted values.\n    pred_data <- data_dta %>%\n        mutate(predicted = predict(conflict_model, newdata = data_dta)) %>%\n        select(z_rgrowing_season_cm, z_rain_ground_dams_ha, predicted)\n\n    # Convert to a Simplified version to fit as an lm object\n    # because interact_plot doesn't work with `Fixest` package.\n    conflict_model_lm <- lm(\n        predicted ~ z_rgrowing_season_cm * z_rain_ground_dams_ha,\n        data = pred_data\n    )\n\n    # Format conflict_type names for our plot.\n    # Our conflict_labels had html which doesn't work in our plot. Easier to do this.\n    conflict_names <- toTitleCase(str_replace_all(conflict_type, \"_\", \" \"))\n\n    # Plot interaction.\n    conflict_interaction_plot <- interact_plot(\n        conflict_model_lm,\n        pred = z_rgrowing_season_cm,\n        modx = z_rain_ground_dams_ha,\n        interval = TRUE,\n        legend.main = \"Irrigation Capacity\" # custom legend name.\n    ) +\n        ggtitle(paste(\"Interaction for\", conflict_names)) +\n        theme_minimal() +\n        labs(\n            x = \"Growing Season Rainfall (cm)\",\n            y = \"Predicted Conflict Incidents \",\n        )\n\n    # Add plot to our plot list for patchwork.\n    interaction_plots[[i]] <- conflict_interaction_plot\n}\n\n# Combine all plots into a single figure.\ncombined_plot <- wrap_plots(interaction_plots, ncol = 2)\n\n# All axis titles are the same we can make patchwork clean up our labels.\ncombined_plot +\n    plot_annotation(title = \"Rainfall & Irrigation on Conflict Types\") + # patchwork title.\n    plot_layout(\n        axis_titles = \"collect\", # 1x 1y axis label.\n        guides = \"collect\"\n    ) # 1 legend.\n```\n\n::: {.cell-output-display}\n![](gatti-2020-recreation_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Citations\n\nGatti, N., Baylis, K. and Crost, B. (2020), Can Irrigation Infrastructure Mitigate the Effect of Rainfall Shocks on Conflict? Evidence from Indonesia. Amer. J. Agr. Econ., 103: 211-231. https://doi.org/10.1002/ajae.12092",
    "supporting": [
      "gatti-2020-recreation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}